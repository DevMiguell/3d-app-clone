{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Documentos/vscode/ESTUDOS/JAVASCRIPT/Outros/scrool app/src/Model.js\",\n    _s = $RefreshSig$();\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport * as THREE from \"three\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useGLTF, useAnimations, PerspectiveCamera } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst color = new THREE.Color();\nexport default function Model(_ref) {\n  _s();\n\n  let {\n    scroll,\n    ...props\n  } = _ref;\n  const t = useRef(0);\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"/model.glb\");\n  const {\n    actions,\n    mixer\n  } = useAnimations(animations, group);\n  const [hovered, set] = useState();\n  const extras = {\n    receiveShadow: true,\n    castShadow: true,\n    \"material-envMapIntensity\": 0.2\n  };\n  useEffect(() => void (actions[\"CameraAction.005\"].play().paused = true), []);\n  useEffect(() => {\n    if (hovered) group.current.getObjectByName(hovered).material.color.set(\"white\");\n    document.body.style.cursor = hovered ? \"pointer\" : \"auto\";\n  }, [hovered]);\n  useFrame(state => {\n    actions[\"CameraAction.005\"].time = THREE.MathUtils.lerp(actions[\"CameraAction.005\"].time, actions[\"CameraAction.005\"].getClip().duration * scroll.current, 0.05);\n    group.current.children[0].children.forEach((child, index) => {\n      child.material.color.lerp(color.set(hovered === child.name ? \"tomato\" : \"#202020\").convertSRGBToLinear(), hovered ? 0.1 : 0.05);\n      const et = state.clock.elapsedTime;\n      child.position.y = Math.sin((et + index * 2000) / 2) * 1;\n      child.rotation.x = Math.sin((et + index * 2000) / 3) / 10;\n      child.rotation.y = Math.cos((et + index * 2000) / 2) / 10;\n      child.rotation.z = Math.sin((et + index * 2000) / 3) / 10;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      onPointerOver: e => (e.stopPropagation(), set(e.object.name)),\n      onPointerOut: e => (e.stopPropagation(), set(null)),\n      position: [0.06, 4.04, 0.35],\n      scale: [0.25, 0.25, 0.25],\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Headphones\",\n        geometry: nodes.Headphones.geometry,\n        material: materials.M_Headphone,\n        ...extras\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Notebook\",\n        geometry: nodes.Notebook.geometry,\n        material: materials.M_Notebook,\n        ...extras\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Rocket003\",\n        geometry: nodes.Rocket003.geometry,\n        material: materials.M_Rocket,\n        ...extras\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Roundcube001\",\n        geometry: nodes.Roundcube001.geometry,\n        material: materials.M_Roundcube,\n        ...extras\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Table\",\n        geometry: nodes.Table.geometry,\n        material: materials.M_Table,\n        ...extras\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"VR_Headset\",\n        geometry: nodes.VR_Headset.geometry,\n        material: materials.M_Headset,\n        ...extras\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Zeppelin\",\n        geometry: nodes.Zeppelin.geometry,\n        material: materials.M_Zeppelin,\n        v: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Camera\",\n      position: [-1.78, 2.04, 23.58],\n      rotation: [1.62, 0.01, 0.11],\n      children: /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        far: 100,\n        near: 0.1,\n        fov: 28,\n        rotation: [-Math.PI / 2, 0, 0],\n        children: /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          castShadow: true,\n          position: [10, 20, 15],\n          \"shadow-camera-right\": 8,\n          \"shadow-camera-top\": 8,\n          \"shadow-camera-left\": -8,\n          \"shadow-camera-bottom\": -8,\n          \"shadow-mapSize-width\": 1024,\n          \"shadow-mapSize-height\": 1024,\n          intensity: 2,\n          \"shadow-bias\": -0.0001\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Model, \"P0kbNnTazDgBgkePRtkOivUM0/g=\", false, function () {\n  return [useGLTF, useAnimations, useFrame];\n});\n\n_c = Model;\nuseGLTF.preload(\"/model.glb\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"sources":["/home/miguel/Documentos/vscode/ESTUDOS/JAVASCRIPT/Outros/scrool app/src/Model.js"],"names":["THREE","React","useEffect","useRef","useState","useGLTF","useAnimations","PerspectiveCamera","useFrame","color","Color","Model","scroll","props","t","group","nodes","materials","animations","actions","mixer","hovered","set","extras","receiveShadow","castShadow","play","paused","current","getObjectByName","material","document","body","style","cursor","state","time","MathUtils","lerp","getClip","duration","children","forEach","child","index","name","convertSRGBToLinear","et","clock","elapsedTime","position","y","Math","sin","rotation","x","cos","z","e","stopPropagation","object","Headphones","geometry","M_Headphone","Notebook","M_Notebook","Rocket003","M_Rocket","Roundcube001","M_Roundcube","Table","M_Table","VR_Headset","M_Headset","Zeppelin","M_Zeppelin","PI","preload"],"mappings":"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","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from \"three\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { useGLTF, useAnimations, PerspectiveCamera } from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\n\nconst color = new THREE.Color()\n\nexport default function Model({ scroll, ...props }) {\n  const t = useRef(0)\n  const group = useRef()\n  const { nodes, materials, animations } = useGLTF(\"/model.glb\")\n  const { actions, mixer } = useAnimations(animations, group)\n  const [hovered, set] = useState()\n  const extras = { receiveShadow: true, castShadow: true, \"material-envMapIntensity\": 0.2 }\n  useEffect(() => void (actions[\"CameraAction.005\"].play().paused = true), [])\n  useEffect(() => {\n    if (hovered) group.current.getObjectByName(hovered).material.color.set(\"white\")\n    document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\n  }, [hovered])\n  useFrame((state) => {\n    actions[\"CameraAction.005\"].time = THREE.MathUtils.lerp(actions[\"CameraAction.005\"].time, actions[\"CameraAction.005\"].getClip().duration * scroll.current, 0.05)\n    group.current.children[0].children.forEach((child, index) => {\n      child.material.color.lerp(color.set(hovered === child.name ? \"tomato\" : \"#202020\").convertSRGBToLinear(), hovered ? 0.1 : 0.05)\n      const et = state.clock.elapsedTime\n      child.position.y = Math.sin((et + index * 2000) / 2) * 1\n      child.rotation.x = Math.sin((et + index * 2000) / 3) / 10\n      child.rotation.y = Math.cos((et + index * 2000) / 2) / 10\n      child.rotation.z = Math.sin((et + index * 2000) / 3) / 10\n    })\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group\n        onPointerOver={(e) => (e.stopPropagation(), set(e.object.name))}\n        onPointerOut={(e) => (e.stopPropagation(), set(null))}\n        position={[0.06, 4.04, 0.35]}\n        scale={[0.25, 0.25, 0.25]}>\n        <mesh name=\"Headphones\" geometry={nodes.Headphones.geometry} material={materials.M_Headphone} {...extras} />\n        <mesh name=\"Notebook\" geometry={nodes.Notebook.geometry} material={materials.M_Notebook} {...extras} />\n        <mesh name=\"Rocket003\" geometry={nodes.Rocket003.geometry} material={materials.M_Rocket} {...extras} />\n        <mesh name=\"Roundcube001\" geometry={nodes.Roundcube001.geometry} material={materials.M_Roundcube} {...extras} />\n        <mesh name=\"Table\" geometry={nodes.Table.geometry} material={materials.M_Table} {...extras} />\n        <mesh name=\"VR_Headset\" geometry={nodes.VR_Headset.geometry} material={materials.M_Headset} {...extras} />\n        <mesh name=\"Zeppelin\" geometry={nodes.Zeppelin.geometry} material={materials.M_Zeppelin} v />\n      </group>\n      <group name=\"Camera\" position={[-1.78, 2.04, 23.58]} rotation={[1.62, 0.01, 0.11]}>\n        <PerspectiveCamera makeDefault far={100} near={0.1} fov={28} rotation={[-Math.PI / 2, 0, 0]}>\n          <directionalLight\n            castShadow\n            position={[10, 20, 15]}\n            shadow-camera-right={8}\n            shadow-camera-top={8}\n            shadow-camera-left={-8}\n            shadow-camera-bottom={-8}\n            shadow-mapSize-width={1024}\n            shadow-mapSize-height={1024}\n            intensity={2}\n            shadow-bias={-0.0001}\n          />\n        </PerspectiveCamera>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(\"/model.glb\")\n"]},"metadata":{},"sourceType":"module"}